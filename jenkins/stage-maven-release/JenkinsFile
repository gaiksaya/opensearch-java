lib = library(identifier: 'jenkins@main', retriever: modernSCM([
    $class: 'GitSCMSource',
   remote: 'https://github.com/opensearch-project/opensearch-build.git',
]))

pipeline {
    agent {
            docker {
                label 'Jenkins-Agent-AL2-X64-C54xlarge-Single-Host'
                image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v2'
                args '-e JAVA_HOME=/opt/java/openjdk-11'
                alwaysPull true
            }
    }
    environment {
        ARTIFACT_PATH = "/usr/share/opensearch/.m2/repository/org/opensearch/client/opensearch-java/"
        OUTPUT_DIR = "$WORKSPACE/maven-signed"
    }
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'ref', value: '$.ref', regexpFilter: 'refs/tags/'],
                [key: 'version', value: '$ref', regexpFilter: '(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)(-)?([A-Za-z0-9]*)' ],
            ],
            // tokenCredentialId: 'jenkins-opensearch-java-generic-webhook-token',
            causeString: 'A tag was cut on opensearch-project/opensearch-java repository causing this workflow to run',
            printContributedVariables: true,
            printPostContent: false,
            regexpFilterExpression: '^refs/tags/.*'
        )
    }
    stages {
        // stage('parameters') {
        //     steps {
        //         script {
        //             properties([
        //                     parameters([
        //                             string(
        //                                     defaultValue: '',
        //                                     name: 'REF',
        //                                     trim: true
        //                             ),
        //                             string(
        //                                     name: 'VERSION',
        //                                     trim: true
        //                             )re
        //                     ])
        //             ])
        //             if (params.REF.isEmpty() || params.VERSION.isEmpty()) {
        //                 currentBuild.result = 'ABORTED'
        //                 error('One or both of the parameters is empty')
        //             }
        //         }
        //     }
        // }
        stage('Publish to Maven Local') {
            steps {
                sh "echo ref: ${ref}"
                sh "echo version : ${version}"
                // checkout the commit
                checkout([$class: 'GitSCM', userRemoteConfigs: [[url: 'https://github.com/gaiksaya/opensearch-java.git']],
                        branches: [[name: "$ref"]]])

                //publish to maven local
                sh('./gradlew publishtoMavenLocal')

                //Rename maven-metadata-local.xml to maven-metadata.xml
                sh('mv /usr/share/opensearch/.m2/repository/org/opensearch/client/opensearch-java/maven-metadata-local.xml /usr/share/opensearch/.m2/repository/org/opensearch/client/opensearch-java/maven-metadata.xml')
            }
        }
        // stage('Sign') {
        //     steps {
        //         script {
        //             signArtifacts(
        //                     artifactPath: "${ARTIFACT_PATH}",
        //                     type: maven,
        //                     platform: 'linux'
        //             )
        //         }
        //     }
        // }
        // stage('Generate checksums') {
        //     steps {
        //          dir("$OUTPUT_DIR/org"){
        //             // copy only required artifacts to other folder so that not everything from .m2 gets staged
        //             sh('cp -r /usr/share/opensearch/.m2/repository/org/opensearch $OUTPUT_DIR/org/')
        //             sh('bash -O extglob -c "rm -rf $OUTPUT_DIR/org/opensearch/!(client)"')
        //             sh '''
        //             echo "Creating checksums"
        //             for file in $(find \$OUTPUT_DIR/org/opensearch/client/opensearch-java/ -type f)
        //                 do
        //                 if [ \${file##*.} != "asc" ]
        //                 then
        //                     (md5sum \$file | cut -d \' \' -f 1) > \$file.md5
        //                     (sha1sum \$file | cut -d \' \' -f 1) > \$file.sha1
        //                     (sha256sum \$file | cut -d \' \' -f 1) > \$file.sha256
        //                     (sha512sum \$file | cut -d \' \' -f 1) > \$file.sha512
        //                 fi
        //                 done
        //             '''
        //          }
        //             sh('ls -l \$OUTPUT_DIR/org/opensearch/client/opensearch-java/\${VERSION}')
        //     }
        // }
        // stage('Stage maven artifacts') {
        //     environment {
        //       REPO_URL = "https://aws.oss.sonatype.org/"
        //       STAGING_PROFILE_ID = "${SONATYPE_STAGING_PROFILE_ID}"
        //       BUILD_ID = "${BUILD_NUMBER}"
        //     }
        //     steps {
        //         // checkout the build repo
        //         git url: 'https://github.com/opensearch-project/opensearch-build.git', branch: 'main'

        //         // stage artifacts for release with Sonatype
        //         withCredentials([usernamePassword(credentialsId: 'jenkins-sonatype-creds', usernameVariable: 'SONATYPE_USERNAME', passwordVariable: 'SONATYPE_PASSWORD')]) {
        //             sh('$WORKSPACE/publish/stage-maven-release.sh $OUTPUT_DIR')
        //         }
        //     }
        // }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
